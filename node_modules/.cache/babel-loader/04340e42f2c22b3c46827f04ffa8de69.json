{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lanzallamas27\\\\Desktop\\\\CursoReact\\\\ecommerce-cotroneo\\\\src\\\\components\\\\CartForm\\\\CartForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useCartContext } from '../../context/CartContext';\nimport { getFirestore, collection, addDoc, query, where, documentId, writeBatch, getDocs } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartForm = () => {\n  _s();\n\n  const {\n    cartList,\n    totalPrice,\n    removeFromCart,\n    emptyCart\n  } = useCartContext();\n  const [idOrder, setIdOrder] = useState('');\n  const [dataForm, setDataForm] = useState({\n    email: '',\n    phone: '',\n    name: ''\n  });\n\n  const goShopping = async e => {\n    e.preventDefault();\n    let purchaseOrder = {};\n    purchaseOrder.buyer = dataForm;\n    purchaseOrder.items = cartList.map(cartItem => {\n      const id = cartItem.item.id;\n      const name = cartItem.item.name;\n      const price = cartItem.item.price * cartItem.quantity;\n      const quantity = cartItem.quantity;\n      return {\n        id,\n        name,\n        price,\n        quantity\n      };\n    });\n    purchaseOrder.total = totalPrice();\n    console.log(purchaseOrder);\n    const db = getFirestore();\n    const ordersCollection = collection(db, 'orders');\n    await addDoc(ordersCollection, purchaseOrder).then(resp => setIdOrder(resp.id));\n    const queryCollection = collection(db, 'items');\n    const queryUpdateStock = query(queryCollection, where(documentId(), 'in', cartList.map(it => it.item.id)));\n    const batch = writeBatch(db);\n    await getDocs(queryUpdateStock).then(resp => resp.docs.forEach(res => batch.update(res.ref, {\n      stock: res.data().stock - cartList.find(item => item.item.id === res.id).quantity\n    }))).catch(err => console.log(err)).finally(() => {\n      setDataForm({\n        email: '',\n        phone: '',\n        name: ''\n      });\n      emptyCart();\n    });\n    batch.commit();\n  };\n\n  const handleChange = event => {\n    setDataForm({ ...dataForm,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [idOrder !== '' && `Muchas Gracias por su Compra!! El id de la orden es: ${idOrder}`, /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: goShopping,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Nombre\",\n        onChange: handleChange,\n        value: dataForm.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"phone\",\n        placeholder: \"Tel\\xE9fono\",\n        onChange: handleChange,\n        value: dataForm.phone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"E-mail\",\n        onChange: handleChange,\n        value: dataForm.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"validarEmail\",\n        placeholder: \"Repetir E-mail\",\n        onChange: handleChange //value={}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"shoppingCart__button\",\n        children: \"Procesar Orden\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartForm, \"zNDJQzKSxQzbWiPL0tNnRroFaio=\", false, function () {\n  return [useCartContext];\n});\n\n_c = CartForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartForm\");","map":{"version":3,"sources":["C:/Users/lanzallamas27/Desktop/CursoReact/ecommerce-cotroneo/src/components/CartForm/CartForm.jsx"],"names":["useState","useCartContext","getFirestore","collection","addDoc","query","where","documentId","writeBatch","getDocs","CartForm","cartList","totalPrice","removeFromCart","emptyCart","idOrder","setIdOrder","dataForm","setDataForm","email","phone","name","goShopping","e","preventDefault","purchaseOrder","buyer","items","map","cartItem","id","item","price","quantity","total","console","log","db","ordersCollection","then","resp","queryCollection","queryUpdateStock","it","batch","docs","forEach","res","update","ref","stock","data","find","catch","err","finally","commit","handleChange","event","target","value"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport { useCartContext } from '../../context/CartContext';\r\nimport { getFirestore, collection, addDoc, query, where, documentId, writeBatch, getDocs } from 'firebase/firestore'\r\n\r\nexport const CartForm = () => {\r\n\r\n    const { cartList, totalPrice, removeFromCart, emptyCart } = useCartContext();\r\n    const [ idOrder, setIdOrder ] = useState('')\r\n\r\n    const [ dataForm, setDataForm ] = useState({\r\n        email: '',\r\n        phone: '',\r\n        name: ''\r\n    })\r\n\r\n    const goShopping = async (e) => {\r\n        e.preventDefault()  \r\n             \r\n        let purchaseOrder = {}\r\n           \r\n        purchaseOrder.buyer = dataForm;\r\n        purchaseOrder.items = cartList.map ( cartItem => {\r\n            const id = cartItem.item.id;\r\n            const name = cartItem.item.name;\r\n            const price = cartItem.item.price * cartItem.quantity;\r\n            const quantity = cartItem.quantity\r\n            \r\n            return {\r\n                id, \r\n                name, \r\n                price, \r\n                quantity\r\n            }   \r\n        }) \r\n        purchaseOrder.total = totalPrice(); \r\n    \r\n        console.log(purchaseOrder)\r\n        \r\n        const db = getFirestore()\r\n        const ordersCollection = collection (db, 'orders')\r\n        await addDoc( ordersCollection, purchaseOrder)\r\n        .then(resp => setIdOrder(resp.id))\r\n        \r\n        \r\n        const queryCollection = collection(db, 'items')\r\n            \r\n        const queryUpdateStock = query(\r\n            queryCollection, \r\n            where ( documentId() , 'in', cartList.map ( it => it.item.id ) )          \r\n        ) \r\n    \r\n        const batch = writeBatch(db)\r\n    \r\n        await getDocs(queryUpdateStock)\r\n        .then(resp => resp.docs.forEach(res => batch.update(res.ref, {\r\n                stock: res.data().stock - cartList.find(item => item.item.id === res.id).quantity\r\n             })\r\n        ))\r\n        .catch(err => console.log(err))\r\n        .finally(() => { \r\n          setDataForm({\r\n            email: '',\r\n            phone: '',\r\n            name: ''\r\n          })\r\n          emptyCart();\r\n        })    \r\n    \r\n        batch.commit()\r\n    \r\n      }\r\n\r\n    const handleChange = (event) => {      \r\n        setDataForm({ \r\n            ...dataForm,\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"container\">\r\n            {idOrder !== '' && `Muchas Gracias por su Compra!! El id de la orden es: ${idOrder}` }\r\n            <form onSubmit={goShopping}>\r\n                <input \r\n                type='text' \r\n                name='name' \r\n                placeholder='Nombre' \r\n                onChange={handleChange}\r\n                value={dataForm.name}\r\n                />\r\n\r\n                <input \r\n                type='number' \r\n                name='phone'\r\n                placeholder='Teléfono' \r\n                onChange={handleChange}\r\n                value={dataForm.phone}\r\n                />\r\n\r\n                <input \r\n                type='email' \r\n                name='email'\r\n                placeholder='E-mail' \r\n                onChange={handleChange}\r\n                value={dataForm.email}\r\n                />\r\n\r\n                <input \r\n                type='email' \r\n                name='validarEmail'\r\n                placeholder='Repetir E-mail' \r\n                onChange={handleChange}\r\n                //value={}\r\n                />\r\n\r\n                <button className=\"shoppingCart__button\">Procesar Orden</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}