{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lanzallamas27\\\\Desktop\\\\CursoReact\\\\ecommerce-cotroneo\\\\src\\\\components\\\\CartForm\\\\CartForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useCartContext } from '../../context/CartContext';\nimport { getFirestore, collection, addDoc, query, where, documentId, writeBatch, getDocs } from 'firebase/firestore';\nimport '../../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartForm = () => {\n  _s();\n\n  const {\n    cartList,\n    totalPrice,\n    emptyCart\n  } = useCartContext();\n  const {\n    setIdOrder\n  } = useState('');\n  const [dataForm, setDataForm] = useState({\n    email: '',\n    phone: '',\n    name: ''\n  });\n\n  const goShopping = async e => {\n    e.preventDefault();\n    let purchaseOrder = {};\n    purchaseOrder.buyer = dataForm;\n    purchaseOrder.items = cartList.map(cartItem => {\n      const id = cartItem.item.id;\n      const name = cartItem.item.name;\n      const price = cartItem.item.price * cartItem.quantity;\n      const quantity = cartItem.quantity;\n      return {\n        id,\n        name,\n        price,\n        quantity\n      };\n    });\n    purchaseOrder.total = totalPrice();\n    const db = getFirestore();\n    const ordersCollection = collection(db, 'orders');\n    await addDoc(ordersCollection, purchaseOrder).then(resp => setIdOrder(resp.id));\n    const queryCollection = collection(db, 'items');\n    const queryUpdateStock = query(queryCollection, where(documentId(), 'in', cartList.map(it => it.item.id)));\n    const batch = writeBatch(db);\n    await getDocs(queryUpdateStock).then(resp => resp.docs.forEach(res => batch.update(res.ref, {\n      stock: res.data().stock - cartList.find(item => item.item.id === res.id).quantity\n    }))).catch(err => console.log(err)).finally(() => {\n      setDataForm({\n        email: '',\n        phone: '',\n        name: ''\n      });\n      emptyCart();\n    });\n    batch.commit();\n  };\n\n  const handleChange = event => {\n    setDataForm({ ...dataForm,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: goShopping,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Nombre\",\n        onChange: handleChange,\n        value: dataForm.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        name: \"phone\",\n        placeholder: \"Tel\\xE9fono\",\n        onChange: handleChange,\n        value: dataForm.phone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"E-mail\",\n        onChange: handleChange,\n        value: dataForm.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"form__button\",\n        children: \"Procesar Orden\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartForm, \"6630XwF/uaS+5ZeG3Bd1lR01pJI=\", false, function () {\n  return [useCartContext];\n});\n\n_c = CartForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartForm\");","map":{"version":3,"sources":["C:/Users/lanzallamas27/Desktop/CursoReact/ecommerce-cotroneo/src/components/CartForm/CartForm.jsx"],"names":["useState","useCartContext","getFirestore","collection","addDoc","query","where","documentId","writeBatch","getDocs","CartForm","cartList","totalPrice","emptyCart","setIdOrder","dataForm","setDataForm","email","phone","name","goShopping","e","preventDefault","purchaseOrder","buyer","items","map","cartItem","id","item","price","quantity","total","db","ordersCollection","then","resp","queryCollection","queryUpdateStock","it","batch","docs","forEach","res","update","ref","stock","data","find","catch","err","console","log","finally","commit","handleChange","event","target","value"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport { useCartContext } from '../../context/CartContext';\r\nimport { getFirestore, collection, addDoc, query, where, documentId, writeBatch, getDocs } from 'firebase/firestore'\r\nimport '../../App.css'\r\n\r\nexport const CartForm = () => {\r\n\r\n    const { cartList, totalPrice, emptyCart } = useCartContext();\r\n\r\n    const { setIdOrder } = useState('');\r\n\r\n    const [ dataForm, setDataForm ] = useState({\r\n        email: '',\r\n        phone: '',\r\n        name: ''\r\n    })\r\n\r\n    const goShopping = async (e) => {\r\n        e.preventDefault()  \r\n             \r\n        let purchaseOrder = {}\r\n           \r\n        purchaseOrder.buyer = dataForm;\r\n        purchaseOrder.items = cartList.map ( cartItem => {\r\n            const id = cartItem.item.id;\r\n            const name = cartItem.item.name;\r\n            const price = cartItem.item.price * cartItem.quantity;\r\n            const quantity = cartItem.quantity\r\n            \r\n            return {\r\n                id, \r\n                name, \r\n                price, \r\n                quantity\r\n            }   \r\n        }) \r\n        purchaseOrder.total = totalPrice(); \r\n       \r\n        const db = getFirestore()\r\n        const ordersCollection = collection (db, 'orders')\r\n        await addDoc( ordersCollection, purchaseOrder)\r\n        .then(resp => setIdOrder(resp.id))\r\n        \r\n        \r\n        const queryCollection = collection(db, 'items')\r\n            \r\n        const queryUpdateStock = query(\r\n            queryCollection, \r\n            where ( documentId() , 'in', cartList.map ( it => it.item.id ) )          \r\n        ) \r\n    \r\n        const batch = writeBatch(db)\r\n    \r\n        await getDocs(queryUpdateStock)\r\n        .then(resp => resp.docs.forEach(res => batch.update(res.ref, {\r\n                stock: res.data().stock - cartList.find(item => item.item.id === res.id).quantity\r\n             })\r\n        ))\r\n        .catch(err => console.log(err))\r\n        .finally(() => { \r\n          setDataForm({\r\n            email: '',\r\n            phone: '',\r\n            name: ''\r\n          })\r\n          emptyCart();\r\n        })\r\n            \r\n    \r\n        batch.commit()\r\n    \r\n      }\r\n\r\n    const handleChange = (event) => {      \r\n        setDataForm({ \r\n            ...dataForm,\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"container\">\r\n\r\n            <form className= \"form\" onSubmit={goShopping}>\r\n                <input \r\n                    type='text' \r\n                    name='name' \r\n                    placeholder='Nombre' \r\n                    onChange={handleChange}\r\n                    value={dataForm.name}\r\n                />\r\n\r\n                <input \r\n                    type='tel' \r\n                    name='phone'\r\n                    placeholder='Teléfono' \r\n                    onChange={handleChange}\r\n                    value={dataForm.phone}\r\n                />\r\n\r\n                <input \r\n                    type='email' \r\n                    name='email'\r\n                    placeholder='E-mail' \r\n                    onChange={handleChange}\r\n                    value={dataForm.email}\r\n                />\r\n\r\n                <button className=\"form__button\">Procesar Orden</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}