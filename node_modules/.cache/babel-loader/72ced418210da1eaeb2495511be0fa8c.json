{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lanzallamas27\\\\Desktop\\\\CursoReact\\\\ecommerce-cotroneo\\\\src\\\\components\\\\Cart\\\\Cart.jsx\",\n    _s = $RefreshSig$();\n\nimport { useCartContext } from '../../context/CartContext';\nimport { Link } from 'react-router-dom';\nimport { useState } from \"react\";\nimport { getFirestore, collection, addDoc, query, where, documentId, writeBatch, getDocs } from 'firebase/firestore';\nimport '../../App.css';\nimport { CartList } from '../CartList/CartList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Cart = () => {\n  _s();\n\n  const {\n    cartList,\n    totalPrice,\n    removeFromCart,\n    emptyCart\n  } = useCartContext();\n  const [idOrder, setIdOrder] = useState('');\n  const [dataForm, setDataForm] = useState({\n    email: '',\n    phone: '',\n    name: ''\n  });\n\n  const goShopping = async e => {\n    e.preventDefault();\n    let purchaseOrder = {};\n    purchaseOrder.buyer = dataForm;\n    purchaseOrder.items = cartList.map(cartItem => {\n      const id = cartItem.item.id;\n      const name = cartItem.item.name;\n      const price = cartItem.item.price * cartItem.quantity;\n      const quantity = cartItem.quantity;\n      return {\n        id,\n        name,\n        price,\n        quantity\n      };\n    });\n    purchaseOrder.total = totalPrice();\n    console.log(purchaseOrder);\n    const db = getFirestore();\n    const ordersCollection = collection(db, 'orders');\n    await addDoc(ordersCollection, purchaseOrder).then(resp => setIdOrder(resp.id));\n    const queryCollection = collection(db, 'items');\n    const queryUpdateStock = query(queryCollection, where(documentId(), 'in', cartList.map(it => it.item.id)));\n    const batch = writeBatch(db);\n    await getDocs(queryUpdateStock).then(resp => resp.docs.forEach(res => batch.update(res.ref, {\n      stock: res.data().stock - cartList.find(item => item.item.id === res.id).quantity\n    }))).catch(err => console.log(err)).finally(() => {\n      setDataForm({\n        email: '',\n        phone: '',\n        name: ''\n      });\n      emptyCart();\n    });\n    batch.commit();\n  };\n\n  const handleChange = event => {\n    setDataForm({ ...dataForm,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [idOrder !== '' && `Muchas Gracias por su Compra!! El id de la orden es: ${idOrder}`, cartList.length !== 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CartList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: goShopping,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Nombre\",\n          onChange: handleChange,\n          value: dataForm.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"phone\",\n          placeholder: \"Tel\\xE9fono\",\n          onChange: handleChange,\n          value: dataForm.phone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"E-mail\",\n          onChange: handleChange,\n          value: dataForm.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"validarEmail\",\n          placeholder: \"Repetir E-mail\",\n          onChange: handleChange //value={}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"shoppingCart__button\",\n          children: \"Procesar Orden\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"shoppingCart__messageTitle\",\n        children: \"Tu carrito est\\xE1 ahora vac\\xEDo!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"shoppingCart__message\",\n        children: \"Tenemos los mejores productos para tus mascotas, te invitamos a visitar nuestra tienda.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"shoppingCart__button\",\n          children: \"Conoce Nuestros Productos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"r6/+i9ZcGisfgx1cNwfzwSnI4Cs=\", false, function () {\n  return [useCartContext];\n});\n\n_c = Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["C:/Users/lanzallamas27/Desktop/CursoReact/ecommerce-cotroneo/src/components/Cart/Cart.jsx"],"names":["useCartContext","Link","useState","getFirestore","collection","addDoc","query","where","documentId","writeBatch","getDocs","CartList","Cart","cartList","totalPrice","removeFromCart","emptyCart","idOrder","setIdOrder","dataForm","setDataForm","email","phone","name","goShopping","e","preventDefault","purchaseOrder","buyer","items","map","cartItem","id","item","price","quantity","total","console","log","db","ordersCollection","then","resp","queryCollection","queryUpdateStock","it","batch","docs","forEach","res","update","ref","stock","data","find","catch","err","finally","commit","handleChange","event","target","value","length"],"mappings":"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","sourcesContent":["import { useCartContext } from '../../context/CartContext';\r\nimport { Link } from 'react-router-dom';\r\nimport { useState } from \"react\";\r\nimport { getFirestore, collection, addDoc, query, where, documentId, writeBatch, getDocs } from 'firebase/firestore'\r\nimport '../../App.css'\r\nimport { CartList } from '../CartList/CartList';\r\n\r\n\r\nexport const Cart = () => {\r\n\r\n  const { cartList, totalPrice, removeFromCart, emptyCart } = useCartContext();\r\n\r\n  const [ idOrder, setIdOrder ] = useState('')\r\n  const [ dataForm, setDataForm ] = useState({\r\n    email: '',\r\n    phone: '',\r\n    name: ''\r\n  })\r\n\r\n\r\n  const goShopping = async (e) => {\r\n    e.preventDefault()  \r\n         \r\n    let purchaseOrder = {}\r\n       \r\n    purchaseOrder.buyer = dataForm;\r\n    purchaseOrder.items = cartList.map ( cartItem => {\r\n        const id = cartItem.item.id;\r\n        const name = cartItem.item.name;\r\n        const price = cartItem.item.price * cartItem.quantity;\r\n        const quantity = cartItem.quantity\r\n        \r\n        return {\r\n            id, \r\n            name, \r\n            price, \r\n            quantity\r\n        }   \r\n    }) \r\n    purchaseOrder.total = totalPrice(); \r\n\r\n    console.log(purchaseOrder)\r\n    \r\n    const db = getFirestore()\r\n    const ordersCollection = collection (db, 'orders')\r\n    await addDoc( ordersCollection, purchaseOrder)\r\n    .then(resp => setIdOrder(resp.id))\r\n    \r\n    \r\n    const queryCollection = collection(db, 'items')\r\n        \r\n    const queryUpdateStock = query(\r\n        queryCollection, \r\n        where ( documentId() , 'in', cartList.map ( it => it.item.id ) )          \r\n    ) \r\n\r\n    const batch = writeBatch(db)\r\n\r\n    await getDocs(queryUpdateStock)\r\n    .then(resp => resp.docs.forEach(res => batch.update(res.ref, {\r\n            stock: res.data().stock - cartList.find(item => item.item.id === res.id).quantity\r\n         })\r\n    ))\r\n    .catch(err => console.log(err))\r\n    .finally(() => { \r\n      setDataForm({\r\n        email: '',\r\n        phone: '',\r\n        name: ''\r\n      })\r\n      emptyCart();\r\n    })    \r\n\r\n    batch.commit()\r\n\r\n  }\r\n\r\n  const handleChange = (event) => {      \r\n    setDataForm({ \r\n        ...dataForm,\r\n        [event.target.name]: event.target.value\r\n    })\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {idOrder !== '' && `Muchas Gracias por su Compra!! El id de la orden es: ${idOrder}` }\r\n      { cartList.length !== 0 ? <>\r\n        <CartList/>\r\n        <form onSubmit={goShopping}>\r\n          <input \r\n            type='text' \r\n            name='name' \r\n            placeholder='Nombre' \r\n            onChange={handleChange}\r\n            value={dataForm.name}\r\n          />\r\n        \r\n          <input \r\n            type='number' \r\n            name='phone'\r\n            placeholder='Teléfono' \r\n            onChange={handleChange}\r\n            value={dataForm.phone}\r\n          />\r\n          \r\n          <input \r\n            type='email' \r\n            name='email'\r\n            placeholder='E-mail' \r\n            onChange={handleChange}\r\n            value={dataForm.email}\r\n          />\r\n\r\n          <input \r\n            type='email' \r\n            name='validarEmail'\r\n            placeholder='Repetir E-mail' \r\n            onChange={handleChange}\r\n            //value={}\r\n          />\r\n          \r\n          <button className=\"shoppingCart__button\">Procesar Orden</button>\r\n        </form>\r\n        </>\r\n      :   \r\n        <>   \r\n        <h2 className=\"shoppingCart__messageTitle\">Tu carrito está ahora vacío!</h2>\r\n        <p className=\"shoppingCart__message\">Tenemos los mejores productos para tus mascotas, te invitamos a visitar nuestra tienda.</p>\r\n        <Link to='/'>\r\n          <button className=\"shoppingCart__button\">Conoce Nuestros Productos</button>\r\n        </Link>\r\n        </> \r\n      }\r\n    </div>\r\n  )\r\n\r\n};\r\n"]},"metadata":{},"sourceType":"module"}