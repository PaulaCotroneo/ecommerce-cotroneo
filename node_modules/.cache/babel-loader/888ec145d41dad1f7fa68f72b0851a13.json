{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lanzallamas27\\\\Desktop\\\\CursoReact\\\\ecommerce-cotroneo\\\\src\\\\context\\\\CartContext.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cartContext = /*#__PURE__*/createContext([]);\nexport function useCartContext() {\n  _s();\n\n  return useContext(cartContext);\n}\n\n_s(useCartContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function CartContextProvider(_ref) {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  const [cartList, setCartList] = useState([]);\n\n  function agregarAlCarrito(item, quantity) {\n    const index = cartList.findIndex(i => i.item.id === item.id); //-1, pos\n\n    console.log(index);\n\n    if (index > -1) {\n      const oldQy = cartList[index].quantity;\n      carList.splice(index, 1);\n      setCartList([...cartList, {\n        item,\n        quantity: quantity + oldQy\n      }]);\n    } else {\n      setCartList([...cartList, {\n        item,\n        quantity\n      }]);\n    } // return setCartList([ ...cartList, {item, cantidad} ]);\n\n  }\n\n  function vaciarCarrito() {\n    setCartList([]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(cartContext.Provider, {\n    value: {\n      cartList,\n      agregarAlCarrito,\n      vaciarCarrito\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 12\n  }, this);\n}\n\n_s2(CartContextProvider, \"RW87CZFqiFaX3f9mW4Moo149pt0=\");\n\n_c = CartContextProvider;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartContextProvider\");","map":{"version":3,"sources":["C:/Users/lanzallamas27/Desktop/CursoReact/ecommerce-cotroneo/src/context/CartContext.jsx"],"names":["createContext","useContext","useState","cartContext","useCartContext","CartContextProvider","children","cartList","setCartList","agregarAlCarrito","item","quantity","index","findIndex","i","id","console","log","oldQy","carList","splice","vaciarCarrito"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,OAApD;;AAEA,MAAMC,WAAW,gBAAGH,aAAa,CAAC,EAAD,CAAjC;AAEA,OAAO,SAASI,cAAT,GAA0B;AAAA;;AAAC,SAAOH,UAAU,CAACE,WAAD,CAAjB;AAA+B;;GAAjDC,c;;AAIhB,OAAO,SAASC,mBAAT,OAA2C;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAE9C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;;AAEA,WAASO,gBAAT,CAA0BC,IAA1B,EAAgCC,QAAhC,EAAyC;AAKjC,UAAMC,KAAK,GAAGL,QAAQ,CAACM,SAAT,CAAmBC,CAAC,IAAIA,CAAC,CAACJ,IAAF,CAAOK,EAAP,KAAcL,IAAI,CAACK,EAA3C,CAAd,CALiC,CAK2B;;AAC5DC,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;;AAEE,QAAIA,KAAK,GAAG,CAAC,CAAb,EAAgB;AACd,YAAMM,KAAK,GAAGX,QAAQ,CAACK,KAAD,CAAR,CAAgBD,QAA9B;AAEAQ,MAAAA,OAAO,CAACC,MAAR,CAAeR,KAAf,EAAsB,CAAtB;AACAJ,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAc;AAAEG,QAAAA,IAAF;AAAQC,QAAAA,QAAQ,EAAEA,QAAQ,GAAGO;AAA7B,OAAd,CAAD,CAAX;AACD,KALD,MAMK;AACHV,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAc;AAACG,QAAAA,IAAD;AAAOC,QAAAA;AAAP,OAAd,CAAD,CAAX;AACD,KAhB8B,CAmBtC;;AACF;;AAKD,WAASU,aAAT,GAAwB;AACpBb,IAAAA,WAAW,CAAC,EAAD,CAAX;AACH;;AAED,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAChCD,MAAAA,QADgC;AAEhCE,MAAAA,gBAFgC;AAGhCY,MAAAA;AAHgC,KAA7B;AAAA,cAKEf;AALF;AAAA;AAAA;AAAA;AAAA,UAAP;AAQH;;IAzCeD,mB;;KAAAA,mB;AAyCf","sourcesContent":["import { createContext, useContext, useState } from \"react\";\r\n\r\nconst cartContext = createContext([]);\r\n\r\nexport function useCartContext() {return useContext(cartContext)}\r\n\r\n\r\n\r\nexport function CartContextProvider({ children }) {\r\n\r\n    const [cartList, setCartList] = useState([]);\r\n\r\n    function agregarAlCarrito(item, quantity){\r\n\r\n\r\n        \r\n        \r\n            const index = cartList.findIndex(i => i.item.id === item.id)//-1, pos\r\n            console.log(index)\r\n        \r\n              if (index > -1) {\r\n                const oldQy = cartList[index].quantity\r\n        \r\n                carList.splice(index, 1)\r\n                setCartList([...cartList, { item, quantity: quantity + oldQy}])\r\n              }\r\n              else {\r\n                setCartList([...cartList, {item, quantity}])\r\n              }\r\n          \r\n    \r\n       // return setCartList([ ...cartList, {item, cantidad} ]);\r\n    }\r\n    \r\n\r\n    \r\n\r\n    function vaciarCarrito(){\r\n        setCartList([])\r\n    }\r\n\r\n    return <cartContext.Provider value={{\r\n        cartList,\r\n        agregarAlCarrito,\r\n        vaciarCarrito\r\n    }}>\r\n            {children}\r\n    </cartContext.Provider>;\r\n\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}