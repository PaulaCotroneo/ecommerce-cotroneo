{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lanzallamas27\\\\Desktop\\\\CursoReact\\\\ecommerce-cotroneo\\\\src\\\\components\\\\Cart\\\\Cart.jsx\",\n    _s = $RefreshSig$();\n\nimport { useCartContext } from '../../context/CartContext';\nimport { Link } from 'react-router-dom';\nimport { useState } from \"react\";\nimport { getFirestore, collection, addDoc, query, where, documentId, writeBatch, getDocs } from 'firebase/firestore';\nimport '../../App.css';\nimport { CartList } from '../CartList/CartList';\nimport { CartForm } from '../CartForm/CartForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Cart = () => {\n  _s();\n\n  //  const { cartList, totalPrice, removeFromCart, emptyCart } = useCartContext();\n  const [idOrder, setIdOrder] = useState('');\n  /*\r\n   const goShopping = async (e) => {\r\n     e.preventDefault()  \r\n          \r\n     let purchaseOrder = {}\r\n        \r\n     purchaseOrder.buyer = dataForm;\r\n     purchaseOrder.items = cartList.map ( cartItem => {\r\n         const id = cartItem.item.id;\r\n         const name = cartItem.item.name;\r\n         const price = cartItem.item.price * cartItem.quantity;\r\n         const quantity = cartItem.quantity\r\n         \r\n         return {\r\n             id, \r\n             name, \r\n             price, \r\n             quantity\r\n         }   \r\n     }) \r\n     purchaseOrder.total = totalPrice(); \r\n  \n     console.log(purchaseOrder)\r\n     \r\n     const db = getFirestore()\r\n     const ordersCollection = collection (db, 'orders')\r\n     await addDoc( ordersCollection, purchaseOrder)\r\n     .then(resp => setIdOrder(resp.id))\r\n     \r\n     \r\n     const queryCollection = collection(db, 'items')\r\n         \r\n     const queryUpdateStock = query(\r\n         queryCollection, \r\n         where ( documentId() , 'in', cartList.map ( it => it.item.id ) )          \r\n     ) \r\n  \n     const batch = writeBatch(db)\r\n  \n     await getDocs(queryUpdateStock)\r\n     .then(resp => resp.docs.forEach(res => batch.update(res.ref, {\r\n             stock: res.data().stock - cartList.find(item => item.item.id === res.id).quantity\r\n          })\r\n     ))\r\n     .catch(err => console.log(err))\r\n     .finally(() => { \r\n       setDataForm({\r\n         email: '',\r\n         phone: '',\r\n         name: ''\r\n       })\r\n       emptyCart();\r\n     })    \r\n  \n     batch.commit()\r\n  \n   }\r\n   \r\n  \n   const handleChange = (event) => {      \r\n     setDataForm({ \r\n         ...dataForm,\r\n         [event.target.name]: event.target.value\r\n     })\r\n   }\r\n   */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [idOrder !== '' && `Muchas Gracias por su Compra!! El id de la orden es: ${idOrder}`, cartList.length !== 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CartList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CartForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"shoppingCart__messageTitle\",\n        children: \"Tu carrito est\\xE1 ahora vac\\xEDo!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"shoppingCart__message\",\n        children: \"Tenemos los mejores productos para tus mascotas, te invitamos a visitar nuestra tienda.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"shoppingCart__button\",\n          children: \"Conoce Nuestros Productos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"Fo4xxP7nDoRE2AzOQrd7Oacz4Po=\");\n\n_c = Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["C:/Users/lanzallamas27/Desktop/CursoReact/ecommerce-cotroneo/src/components/Cart/Cart.jsx"],"names":["useCartContext","Link","useState","getFirestore","collection","addDoc","query","where","documentId","writeBatch","getDocs","CartList","CartForm","Cart","idOrder","setIdOrder","cartList","length"],"mappings":";;;AAAA,SAASA,cAAT,QAA+B,2BAA/B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,YAAT,EAAuBC,UAAvB,EAAmCC,MAAnC,EAA2CC,KAA3C,EAAkDC,KAAlD,EAAyDC,UAAzD,EAAqEC,UAArE,EAAiFC,OAAjF,QAAgG,oBAAhG;AACA,OAAO,eAAP;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,QAAT,QAAyB,sBAAzB;;;AAGA,OAAO,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAE1B;AAEE,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AAGD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGE,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,eACGY,OAAO,KAAK,EAAZ,IAAmB,wDAAuDA,OAAQ,EADrF,EAEIE,QAAQ,CAACC,MAAT,KAAoB,CAApB,gBAAwB;AAAA,8BACxB,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cADwB,eAExB,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAFwB;AAAA,oBAAxB,gBAKA;AAAA,8BACA;AAAI,QAAA,SAAS,EAAC,4BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAG,QAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAA,+BACE;AAAQ,UAAA,SAAS,EAAC,sBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA,oBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CA9FM;;GAAMJ,I;;KAAAA,I","sourcesContent":["import { useCartContext } from '../../context/CartContext';\r\nimport { Link } from 'react-router-dom';\r\nimport { useState } from \"react\";\r\nimport { getFirestore, collection, addDoc, query, where, documentId, writeBatch, getDocs } from 'firebase/firestore'\r\nimport '../../App.css'\r\nimport { CartList } from '../CartList/CartList';\r\nimport { CartForm } from '../CartForm/CartForm';\r\n\r\n\r\nexport const Cart = () => {\r\n\r\n//  const { cartList, totalPrice, removeFromCart, emptyCart } = useCartContext();\r\n\r\n  const [ idOrder, setIdOrder ] = useState('')\r\n\r\n\r\n /*\r\n  const goShopping = async (e) => {\r\n    e.preventDefault()  \r\n         \r\n    let purchaseOrder = {}\r\n       \r\n    purchaseOrder.buyer = dataForm;\r\n    purchaseOrder.items = cartList.map ( cartItem => {\r\n        const id = cartItem.item.id;\r\n        const name = cartItem.item.name;\r\n        const price = cartItem.item.price * cartItem.quantity;\r\n        const quantity = cartItem.quantity\r\n        \r\n        return {\r\n            id, \r\n            name, \r\n            price, \r\n            quantity\r\n        }   \r\n    }) \r\n    purchaseOrder.total = totalPrice(); \r\n\r\n    console.log(purchaseOrder)\r\n    \r\n    const db = getFirestore()\r\n    const ordersCollection = collection (db, 'orders')\r\n    await addDoc( ordersCollection, purchaseOrder)\r\n    .then(resp => setIdOrder(resp.id))\r\n    \r\n    \r\n    const queryCollection = collection(db, 'items')\r\n        \r\n    const queryUpdateStock = query(\r\n        queryCollection, \r\n        where ( documentId() , 'in', cartList.map ( it => it.item.id ) )          \r\n    ) \r\n\r\n    const batch = writeBatch(db)\r\n\r\n    await getDocs(queryUpdateStock)\r\n    .then(resp => resp.docs.forEach(res => batch.update(res.ref, {\r\n            stock: res.data().stock - cartList.find(item => item.item.id === res.id).quantity\r\n         })\r\n    ))\r\n    .catch(err => console.log(err))\r\n    .finally(() => { \r\n      setDataForm({\r\n        email: '',\r\n        phone: '',\r\n        name: ''\r\n      })\r\n      emptyCart();\r\n    })    \r\n\r\n    batch.commit()\r\n\r\n  }\r\n  \r\n\r\n  const handleChange = (event) => {      \r\n    setDataForm({ \r\n        ...dataForm,\r\n        [event.target.name]: event.target.value\r\n    })\r\n  }\r\n  */\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {idOrder !== '' && `Muchas Gracias por su Compra!! El id de la orden es: ${idOrder}` }\r\n      { cartList.length !== 0 ? <>\r\n        <CartList/>\r\n        <CartForm/>\r\n        </>\r\n      :   \r\n        <>   \r\n        <h2 className=\"shoppingCart__messageTitle\">Tu carrito está ahora vacío!</h2>\r\n        <p className=\"shoppingCart__message\">Tenemos los mejores productos para tus mascotas, te invitamos a visitar nuestra tienda.</p>\r\n        <Link to='/'>\r\n          <button className=\"shoppingCart__button\">Conoce Nuestros Productos</button>\r\n        </Link>\r\n        </> \r\n      }\r\n    </div>\r\n  )\r\n\r\n};\r\n"]},"metadata":{},"sourceType":"module"}