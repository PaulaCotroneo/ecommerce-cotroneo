{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\lanzallamas27\\\\Desktop\\\\CursoReact\\\\ecommerce-cotroneo\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";import _slicedToArray from\"C:\\\\Users\\\\lanzallamas27\\\\Desktop\\\\CursoReact\\\\ecommerce-cotroneo\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import{useEffect,useState}from\"react\";import{collection,getDocs,getFirestore,query,where}from\"firebase/firestore\";import{useParams}from\"react-router-dom\";import{ItemList}from\"../ItemList/ItemList\";import'../../App.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var ItemListContainer=function ItemListContainer(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),listProducts=_useState2[0],setListProducts=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var _useParams=useParams(),idCategory=_useParams.idCategory;useEffect(function(){var db=getFirestore();var queryCollection=collection(db,'items');var queryFilter=!idCategory?queryCollection:query(queryCollection,where('category','==',idCategory));getDocs(queryFilter).then(function(resp){return setListProducts(resp.docs.map(function(prod){return _objectSpread({id:prod.id},prod.data());}));}).catch(function(err){return console.log(err);}).finally(function(){return setLoading(false);});},[idCategory]);return/*#__PURE__*/_jsx(_Fragment,{children:loading?/*#__PURE__*/_jsx(\"h2\",{className:\"loading center\",children:\"Cargando ...\"}):/*#__PURE__*/_jsx(ItemList,{listProducts:listProducts})});};","map":{"version":3,"sources":["C:/Users/lanzallamas27/Desktop/CursoReact/ecommerce-cotroneo/src/components/ItemListContainer/ItemListContainer.jsx"],"names":["useEffect","useState","collection","getDocs","getFirestore","query","where","useParams","ItemList","ItemListContainer","listProducts","setListProducts","loading","setLoading","idCategory","db","queryCollection","queryFilter","then","resp","docs","map","prod","id","data","catch","err","console","log","finally"],"mappings":"yTAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,OAASC,UAAT,CAAqBC,OAArB,CAA8BC,YAA9B,CAA4CC,KAA5C,CAAmDC,KAAnD,KAAgE,oBAAhE,CACA,OAASC,SAAT,KAA0B,kBAA1B,CACA,OAASC,QAAT,KAAyB,sBAAzB,CACA,MAAO,eAAP,C,gGAIA,MAAO,IAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAEnC,cAA0CR,QAAQ,CAAE,EAAF,CAAlD,wCAAQS,YAAR,eAAsBC,eAAtB,eACA,eAAgCV,QAAQ,CAAC,IAAD,CAAxC,yCAAQW,OAAR,eAAiBC,UAAjB,eACA,eAAuBN,SAAS,EAAhC,CAAQO,UAAR,YAAQA,UAAR,CAEAd,SAAS,CAAC,UAAM,CACZ,GAAMe,CAAAA,EAAE,CAAGX,YAAY,EAAvB,CACA,GAAMY,CAAAA,eAAe,CAAGd,UAAU,CAACa,EAAD,CAAK,OAAL,CAAlC,CAEI,GAAME,CAAAA,WAAW,CAAG,CAACH,UAAD,CAChBE,eADgB,CAGhBX,KAAK,CAACW,eAAD,CACDV,KAAK,CAAC,UAAD,CAAa,IAAb,CAAmBQ,UAAnB,CADJ,CAHT,CAOAX,OAAO,CAACc,WAAD,CAAP,CACCC,IADD,CACM,SAAAC,IAAI,QAAIR,CAAAA,eAAe,CAAEQ,IAAI,CAACC,IAAL,CAAUC,GAAV,CAAc,SAAAC,IAAI,wBAAQC,EAAE,CAAED,IAAI,CAACC,EAAjB,EAAwBD,IAAI,CAACE,IAAL,EAAxB,GAAlB,CAAF,CAAnB,EADV,EAECC,KAFD,CAEO,SAAAC,GAAG,QAAIC,CAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ,EAFV,EAGCG,OAHD,CAGS,iBAAKhB,CAAAA,UAAU,CAAC,KAAD,CAAf,EAHT,EAKP,CAhBQ,CAgBN,CAAEC,UAAF,CAhBM,CAAT,CAmBA,mBAEI,yBACMF,OAAO,cACL,WAAI,SAAS,CAAC,gBAAd,0BADK,cAGL,KAAC,QAAD,EACI,YAAY,CAAIF,YADpB,EAJR,EAFJ,CAaH,CAtCM","sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport { collection, getDocs, getFirestore, query, where } from \"firebase/firestore\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport { ItemList } from \"../ItemList/ItemList\"\r\nimport '../../App.css'\r\n\r\n\r\n\r\nexport const ItemListContainer = () => {\r\n    \r\n    const [ listProducts, setListProducts ] = useState ([]);\r\n    const [ loading, setLoading ] = useState(true);\r\n    const { idCategory } = useParams();\r\n           \r\n    useEffect(() => {\r\n        const db = getFirestore()\r\n        const queryCollection = collection(db, 'items')\r\n\r\n            const queryFilter = !idCategory ?\r\n                queryCollection                \r\n            : \r\n                query(queryCollection, \r\n                    where('category', '==', idCategory)\r\n                )\r\n\r\n            getDocs(queryFilter)\r\n            .then(resp => setListProducts( resp.docs.map(prod => ( { id: prod.id, ...prod.data() } )) ))\r\n            .catch(err => console.log(err))\r\n            .finally(()=> setLoading(false)) \r\n\r\n    }, [ idCategory ])\r\n    \r\n       \r\n    return (\r\n\r\n        <>\r\n            { loading ? \r\n                <h2 className=\"loading center\">Cargando ...</h2> \r\n            : \r\n                <ItemList \r\n                    listProducts= { listProducts } \r\n                /> \r\n            }                                   \r\n        </>\r\n        \r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}