{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lanzallamas27\\\\Desktop\\\\CursoReact\\\\ecommerce-cotroneo\\\\src\\\\components\\\\Cart\\\\Cart.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { useCartContext } from '../../context/CartContext';\nimport { getFirestore, collection, addDoc, query, where, documentId, writeBatch, getDocs } from 'firebase/firestore';\nimport { CartList } from '../CartList/CartList'; //import { CartMessage } from '../CartMessage/CartMessage';\n\nimport '../../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Cart = () => {\n  _s();\n\n  const {\n    cartList,\n    totalPrice,\n    emptyCart\n  } = useCartContext();\n  const [idOrder, setIdOrder] = useState('');\n  const [dataForm, setDataForm] = useState({\n    email: '',\n    phone: '',\n    name: ''\n  });\n\n  const goShopping = async e => {\n    e.preventDefault();\n    let purchaseOrder = {};\n    purchaseOrder.buyer = dataForm;\n    purchaseOrder.items = cartList.map(cartItem => {\n      const id = cartItem.item.id;\n      const name = cartItem.item.name;\n      const price = cartItem.item.price * cartItem.quantity;\n      const quantity = cartItem.quantity;\n      return {\n        id,\n        name,\n        price,\n        quantity\n      };\n    });\n    purchaseOrder.total = totalPrice();\n    const db = getFirestore();\n    const ordersCollection = collection(db, 'orders');\n    await addDoc(ordersCollection, purchaseOrder).then(resp => setIdOrder(resp.id));\n    const queryCollection = collection(db, 'items');\n    const queryUpdateStock = query(queryCollection, where(documentId(), 'in', cartList.map(it => it.item.id)));\n    const batch = writeBatch(db);\n    await getDocs(queryUpdateStock).then(resp => resp.docs.forEach(res => batch.update(res.ref, {\n      stock: res.data().stock - cartList.find(item => item.item.id === res.id).quantity\n    }))).catch(err => console.log(err)).finally(() => {\n      setDataForm({\n        email: '',\n        phone: '',\n        name: ''\n      });\n      emptyCart();\n    });\n    batch.commit();\n  };\n\n  const handleChange = event => {\n    setDataForm({ ...dataForm,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shoppingCart__idOrder center\",\n      children: idOrder !== '' && `Muchas Gracias por su compra!! El id de su orden es: ${idOrder}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), cartList.length !== 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CartList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: goShopping,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Nombre\",\n          onChange: handleChange,\n          value: dataForm.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          name: \"phone\",\n          placeholder: \"Tel\\xE9fono\",\n          onChange: handleChange,\n          value: dataForm.phone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"E-mail\",\n          onChange: handleChange,\n          value: dataForm.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"form__button\",\n          children: \"Procesar Orden\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"shoppingCart__messageTitle\",\n          children: \"Tu carrito est\\xE1 ahora vac\\xEDo!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"shoppingCart__message\",\n          children: \"Tenemos los mejores productos para tus mascotas, te invitamos a visitar nuestra tienda.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"shoppingCart__button\",\n            children: \"Ir a Nuestra Tienda\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"OshUnz2MLvbAg6nqnOnkRScL5Ic=\", false, function () {\n  return [useCartContext];\n});\n\n_c = Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["C:/Users/lanzallamas27/Desktop/CursoReact/ecommerce-cotroneo/src/components/Cart/Cart.jsx"],"names":["useState","Link","useCartContext","getFirestore","collection","addDoc","query","where","documentId","writeBatch","getDocs","CartList","Cart","cartList","totalPrice","emptyCart","idOrder","setIdOrder","dataForm","setDataForm","email","phone","name","goShopping","e","preventDefault","purchaseOrder","buyer","items","map","cartItem","id","item","price","quantity","total","db","ordersCollection","then","resp","queryCollection","queryUpdateStock","it","batch","docs","forEach","res","update","ref","stock","data","find","catch","err","console","log","finally","commit","handleChange","event","target","value","length"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,YAAT,EAAuBC,UAAvB,EAAmCC,MAAnC,EAA2CC,KAA3C,EAAkDC,KAAlD,EAAyDC,UAAzD,EAAqEC,UAArE,EAAiFC,OAAjF,QAAgG,oBAAhG;AACA,SAASC,QAAT,QAAyB,sBAAzB,C,CACA;;AACA,OAAO,eAAP;;;AAGA,OAAO,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAExB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,UAAZ;AAAwBC,IAAAA;AAAxB,MAAsCb,cAAc,EAA1D;AAEA,QAAM,CAAEc,OAAF,EAAWC,UAAX,IAA0BjB,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM,CAAEkB,QAAF,EAAYC,WAAZ,IAA4BnB,QAAQ,CAAC;AACvCoB,IAAAA,KAAK,EAAE,EADgC;AAEvCC,IAAAA,KAAK,EAAE,EAFgC;AAGvCC,IAAAA,IAAI,EAAE;AAHiC,GAAD,CAA1C;;AAMA,QAAMC,UAAU,GAAG,MAAOC,CAAP,IAAa;AAC5BA,IAAAA,CAAC,CAACC,cAAF;AAEA,QAAIC,aAAa,GAAG,EAApB;AAEAA,IAAAA,aAAa,CAACC,KAAd,GAAsBT,QAAtB;AACAQ,IAAAA,aAAa,CAACE,KAAd,GAAsBf,QAAQ,CAACgB,GAAT,CAAeC,QAAQ,IAAI;AAC7C,YAAMC,EAAE,GAAGD,QAAQ,CAACE,IAAT,CAAcD,EAAzB;AACA,YAAMT,IAAI,GAAGQ,QAAQ,CAACE,IAAT,CAAcV,IAA3B;AACA,YAAMW,KAAK,GAAGH,QAAQ,CAACE,IAAT,CAAcC,KAAd,GAAsBH,QAAQ,CAACI,QAA7C;AACA,YAAMA,QAAQ,GAAGJ,QAAQ,CAACI,QAA1B;AAEA,aAAO;AACHH,QAAAA,EADG;AAEHT,QAAAA,IAFG;AAGHW,QAAAA,KAHG;AAIHC,QAAAA;AAJG,OAAP;AAMH,KAZqB,CAAtB;AAaAR,IAAAA,aAAa,CAACS,KAAd,GAAsBrB,UAAU,EAAhC;AAEA,UAAMsB,EAAE,GAAGjC,YAAY,EAAvB;AACA,UAAMkC,gBAAgB,GAAGjC,UAAU,CAAEgC,EAAF,EAAM,QAAN,CAAnC;AACA,UAAM/B,MAAM,CAAEgC,gBAAF,EAAoBX,aAApB,CAAN,CACLY,IADK,CACAC,IAAI,IAAItB,UAAU,CAACsB,IAAI,CAACR,EAAN,CADlB,CAAN;AAIA,UAAMS,eAAe,GAAGpC,UAAU,CAACgC,EAAD,EAAK,OAAL,CAAlC;AAEA,UAAMK,gBAAgB,GAAGnC,KAAK,CAC1BkC,eAD0B,EAE1BjC,KAAK,CAAGC,UAAU,EAAb,EAAkB,IAAlB,EAAwBK,QAAQ,CAACgB,GAAT,CAAea,EAAE,IAAIA,EAAE,CAACV,IAAH,CAAQD,EAA7B,CAAxB,CAFqB,CAA9B;AAKA,UAAMY,KAAK,GAAGlC,UAAU,CAAC2B,EAAD,CAAxB;AAEA,UAAM1B,OAAO,CAAC+B,gBAAD,CAAP,CACLH,IADK,CACAC,IAAI,IAAIA,IAAI,CAACK,IAAL,CAAUC,OAAV,CAAkBC,GAAG,IAAIH,KAAK,CAACI,MAAN,CAAaD,GAAG,CAACE,GAAjB,EAAsB;AACrDC,MAAAA,KAAK,EAAEH,GAAG,CAACI,IAAJ,GAAWD,KAAX,GAAmBpC,QAAQ,CAACsC,IAAT,CAAcnB,IAAI,IAAIA,IAAI,CAACA,IAAL,CAAUD,EAAV,KAAiBe,GAAG,CAACf,EAA3C,EAA+CG;AADpB,KAAtB,CAAzB,CADR,EAKLkB,KALK,CAKCC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALR,EAMLG,OANK,CAMG,MAAM;AACbrC,MAAAA,WAAW,CAAC;AACVC,QAAAA,KAAK,EAAE,EADG;AAEVC,QAAAA,KAAK,EAAE,EAFG;AAGVC,QAAAA,IAAI,EAAE;AAHI,OAAD,CAAX;AAKAP,MAAAA,SAAS;AACV,KAbK,CAAN;AAgBA4B,IAAAA,KAAK,CAACc,MAAN;AAED,GAtDH;;AAwDA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5BxC,IAAAA,WAAW,CAAC,EACR,GAAGD,QADK;AAER,OAACyC,KAAK,CAACC,MAAN,CAAatC,IAAd,GAAqBqC,KAAK,CAACC,MAAN,CAAaC;AAF1B,KAAD,CAAX;AAIH,GALD;;AAOA,sBAEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA,gBACG7C,OAAO,KAAK,EAAZ,IAAmB,wDAAuDA,OAAQ;AADrF;AAAA;AAAA;AAAA;AAAA,YADF,EAIIH,QAAQ,CAACiD,MAAT,KAAoB,CAApB,gBACA;AAAA,8BACA,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAM,QAAA,SAAS,EAAE,MAAjB;AAAwB,QAAA,QAAQ,EAAEvC,UAAlC;AAAA,gCACQ;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,IAAI,EAAC,MAFT;AAGI,UAAA,WAAW,EAAC,QAHhB;AAII,UAAA,QAAQ,EAAEmC,YAJd;AAKI,UAAA,KAAK,EAAExC,QAAQ,CAACI;AALpB;AAAA;AAAA;AAAA;AAAA,gBADR,eASQ;AACI,UAAA,IAAI,EAAC,KADT;AAEI,UAAA,IAAI,EAAC,OAFT;AAGI,UAAA,WAAW,EAAC,aAHhB;AAII,UAAA,QAAQ,EAAEoC,YAJd;AAKI,UAAA,KAAK,EAAExC,QAAQ,CAACG;AALpB;AAAA;AAAA;AAAA;AAAA,gBATR,eAiBQ;AACI,UAAA,IAAI,EAAC,OADT;AAEI,UAAA,IAAI,EAAC,OAFT;AAGI,UAAA,WAAW,EAAC,QAHhB;AAII,UAAA,QAAQ,EAAEqC,YAJd;AAKI,UAAA,KAAK,EAAExC,QAAQ,CAACE;AALpB;AAAA;AAAA;AAAA;AAAA,gBAjBR,eAwBM;AAAQ,UAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxBN;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA,oBADA,gBA+BA;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,4BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEI;AAAG,UAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,GAAT;AAAA,iCACE;AAAQ,YAAA,SAAS,EAAC,sBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,qBAnCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAmDD,CA9HM;;GAAMR,I;UAEiCV,c;;;KAFjCU,I","sourcesContent":["import { useState } from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { useCartContext } from '../../context/CartContext';\r\nimport { getFirestore, collection, addDoc, query, where, documentId, writeBatch, getDocs } from 'firebase/firestore'\r\nimport { CartList } from '../CartList/CartList';\r\n//import { CartMessage } from '../CartMessage/CartMessage';\r\nimport '../../App.css'\r\n\r\n\r\nexport const Cart = () => {\r\n\r\n  const { cartList, totalPrice, emptyCart } = useCartContext();\r\n\r\n  const [ idOrder, setIdOrder ] = useState('');\r\n\r\n  const [ dataForm, setDataForm ] = useState({\r\n      email: '',\r\n      phone: '',\r\n      name: ''\r\n  })\r\n\r\n  const goShopping = async (e) => {\r\n      e.preventDefault()  \r\n           \r\n      let purchaseOrder = {}\r\n         \r\n      purchaseOrder.buyer = dataForm;\r\n      purchaseOrder.items = cartList.map ( cartItem => {\r\n          const id = cartItem.item.id;\r\n          const name = cartItem.item.name;\r\n          const price = cartItem.item.price * cartItem.quantity;\r\n          const quantity = cartItem.quantity\r\n          \r\n          return {\r\n              id, \r\n              name, \r\n              price, \r\n              quantity\r\n          }   \r\n      }) \r\n      purchaseOrder.total = totalPrice(); \r\n     \r\n      const db = getFirestore()\r\n      const ordersCollection = collection (db, 'orders')\r\n      await addDoc( ordersCollection, purchaseOrder)\r\n      .then(resp => setIdOrder(resp.id))\r\n      \r\n      \r\n      const queryCollection = collection(db, 'items')\r\n          \r\n      const queryUpdateStock = query(\r\n          queryCollection, \r\n          where ( documentId() , 'in', cartList.map ( it => it.item.id ) )          \r\n      ) \r\n  \r\n      const batch = writeBatch(db)\r\n  \r\n      await getDocs(queryUpdateStock)\r\n      .then(resp => resp.docs.forEach(res => batch.update(res.ref, {\r\n              stock: res.data().stock - cartList.find(item => item.item.id === res.id).quantity\r\n           })\r\n      ))\r\n      .catch(err => console.log(err))\r\n      .finally(() => { \r\n        setDataForm({\r\n          email: '',\r\n          phone: '',\r\n          name: ''\r\n        })\r\n        emptyCart();\r\n      })\r\n          \r\n  \r\n      batch.commit()\r\n  \r\n    }\r\n\r\n  const handleChange = (event) => {      \r\n      setDataForm({ \r\n          ...dataForm,\r\n          [event.target.name]: event.target.value\r\n      })\r\n  }\r\n\r\n  return (\r\n\r\n    <div className=\"container\">\r\n      <div className=\"shoppingCart__idOrder center\">\r\n        {idOrder !== '' && `Muchas Gracias por su compra!! El id de su orden es: ${idOrder}` }\r\n      </div>\r\n      { cartList.length !== 0 ? \r\n        <>\r\n        <CartList/>\r\n        <form className= \"form\" onSubmit={goShopping}>\r\n                <input \r\n                    type='text' \r\n                    name='name' \r\n                    placeholder='Nombre' \r\n                    onChange={handleChange}\r\n                    value={dataForm.name}\r\n                />\r\n\r\n                <input \r\n                    type='tel' \r\n                    name='phone'\r\n                    placeholder='Teléfono' \r\n                    onChange={handleChange}\r\n                    value={dataForm.phone}\r\n                />\r\n\r\n                <input \r\n                    type='email' \r\n                    name='email'\r\n                    placeholder='E-mail' \r\n                    onChange={handleChange}\r\n                    value={dataForm.email}\r\n                />  \r\n              <button className=\"form__button\">Procesar Orden</button>\r\n            </form>\r\n        </>\r\n      :   \r\n        <>   \r\n          <div className=\"center\">\r\n            <h2 className=\"shoppingCart__messageTitle\">Tu carrito está ahora vacío!</h2>\r\n              <p className=\"shoppingCart__message\">Tenemos los mejores productos para tus mascotas, te invitamos a visitar nuestra tienda.</p>\r\n              <Link to='/'>\r\n                <button className=\"shoppingCart__button\">Ir a Nuestra Tienda</button>\r\n              </Link>\r\n          </div>\r\n        </> \r\n      }\r\n    </div>\r\n\r\n  )\r\n\r\n};\r\n"]},"metadata":{},"sourceType":"module"}